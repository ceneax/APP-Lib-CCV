package ceneax.app.opencv

import com.google.gson.Gson
import org.junit.Assert.assertEquals
import org.junit.Test
import kotlin.math.sqrt

/**
 * Example local unit test, which will execute on the development machine (host).
 *
 * See [testing documentation](http://d.android.com/tools/testing).
 */
class ExampleUnitTest {
    @Test
    fun addition_isCorrect() {
        assertEquals(4, 2 + 2)
    }

    @Test
    fun testTime() {
        // 当前采集的人脸数据
        val ad = Gson().fromJson<ArrayList<Double>>("[71.0,91.0,110.5,131.5,155.0,180.5,206.0,230.0,250.0,266.5,271.5,271.0,264.0,251.5,237.5,222.5,207.0,81.0,83.5,95.0,110.5,128.5,150.0,156.0,165.5,179.0,194.5,152.0,164.5,177.0,189.5,182.5,190.5,199.0,202.5,205.0,108.0,110.0,119.5,133.5,127.5,118.0,165.5,166.5,176.0,188.0,185.0,176.0,189.0,193.0,199.5,208.5,212.5,223.0,236.0,235.5,230.0,224.0,215.5,204.0,192.5,206.0,214.0,219.5,232.0,220.5,215.0,207.0]", ArrayList::class.java)

        // 构造的临时测试数据
        val tmpList = ArrayList<ArrayList<Double>>()
        for (i in 0 until 10000) {
            tmpList.add(Gson().fromJson<ArrayList<Double>>("[71.0,91.0,110.5,131.5,155.0,180.5,206.0,230.0,250.0,266.5,271.5,271.0,264.0,251.5,237.5,222.5,207.0,81.0,83.5,95.0,110.5,128.5,150.0,156.0,165.5,179.0,194.5,152.0,164.5,177.0,189.5,182.5,190.5,199.0,202.5,205.0,108.0,110.0,119.5,133.5,127.5,118.0,165.5,166.5,176.0,188.0,185.0,176.0,189.0,193.0,199.5,208.5,212.5,223.0,236.0,235.5,230.0,224.0,215.5,204.0,192.5,206.0,214.0,219.5,232.0,220.5,215.0,207.0]", ArrayList::class.java))
        }

//        System.out.println("ccv: ${CVUtil.compareEDs(ad, tmpList as List<MutableList<Double>>).value}")

//        // 比对
//        for (t in tmpList.indices) {
//            var dis = 0.0
//
//            for (d in tmpList[t].indices) {
//                dis += (ad[d] - tmpList[t][d]) * (ad[d] - tmpList[t][d])
//            }
//
//            val ous = sqrt(dis)
//
//            if (ous <= 20) {
//                System.out.println("ccv: $ous")
//            }
//        }
    }

    @Test
    fun test() {
        val ad = Gson().fromJson<FloatArray>("[-0.101698674, 0.13185862, -0.018859316, -0.03697396, -0.06313801, -0.048449367, -0.026614746, -0.1395575, 0.1543801, -0.09604482, 0.24826673, -0.09726117, -0.24537478, -0.06711103, -0.03370415, 0.17365937, -0.23957944, -0.048314396, -0.051792197, -0.0011096541, 0.0761536, 0.049710646, 0.026736416, 0.08478188, -0.058534347, -0.3279084, -0.12114144, -0.1836083, 0.051822767, -0.083266884, -0.041987117, -0.02282236, -0.086688116, -0.0803823, 0.028988335, 0.004567325, -0.07254288, -0.07087374, 0.1982949, 0.017360825, -0.1879285, 0.0076300628, 0.048332926, 0.23045664, 0.1794013, 0.10813583, -0.0032506865, -0.16027983, 0.15103701, -0.16151288, 0.029995536, 0.11521808, 0.089242086, 0.10847391, 0.039534736, -0.14181048, 0.03669966, 0.14520422, -0.20545647, 0.03992342, 0.051381968, -0.07306227, 0.026397713, 0.007913874, 0.21906671, 0.073203556, -0.10421711, -0.11079192, 0.13029972, -0.19981766, -0.13115723, 0.055016704, -0.10992485, -0.21081713, -0.24753594, -0.0018008687, 0.36891437, 0.15027112, -0.1571914, 0.007527398, -0.015892984, -0.09252606, 0.14403452, 0.19412026, -0.016793046, -0.069715574, -0.05919407, -0.07682353, 0.1999592, -0.07886673, -8.098368E-4, 0.25783667, -0.020635657, 0.08712941, 0.017748725, -0.014107146, -0.11397704, 0.018971644, -0.06050942, -0.080102086, 0.028528629, -0.036081437, -0.029284228, 0.07357086, -0.17476337, 0.1552151, 0.010190974, -0.0026817652, 0.0038313274, -0.036652453, -0.028127035, -0.014978241, 0.16856109, -0.19294131, 0.24644406, 0.18525553, 0.06426914, 0.14019275, 0.0606359, 0.049463283, 0.0017689718, -0.03740639, -0.22703226, -0.04658958, 0.1245096, -0.029183544, 0.07153589, -0.050444413]", FloatArray::class.java)
        val ab = Gson().fromJson<FloatArray>("[-0.14647321, 0.10027083, 0.04852259, -0.06949851, -0.13330816, -0.003763279, 0.01390489, -0.069658816, 0.13681424, -0.09796478, 0.22275959, -0.024145084, -0.30337286, 0.043484736, -0.05875497, 0.12698792, -0.19320247, -0.07462483, -0.11260925, -0.14396304, 0.021425406, 0.10747296, 0.033775494, 0.045897257, -0.12510358, -0.33077294, -0.08865003, -0.043195106, 0.004397209, -0.045513697, 0.027463641, 0.060675886, -0.13277695, -0.033873484, -8.2437694E-4, 0.026436554, -0.074824125, -0.11538769, 0.16030009, -0.015509959, -0.13031282, -0.0016268659, 0.049092922, 0.28287384, 0.20288, 0.035110086, 0.04906521, -0.08805677, 0.05232543, -0.27570683, 0.108869255, 0.09862091, 0.060562667, 0.07497265, 0.08133415, -0.17921694, -0.050716177, 0.19269425, -0.06914041, 0.032960106, 0.033507276, -0.07845377, 0.047240555, -0.104414165, 0.19859734, 0.07365825, -0.12384439, -0.08188312, 0.19132012, -0.12905727, -0.132144, 0.012246707, -0.1104731, -0.18988258, -0.3425239, 0.11864241, 0.3890268, 0.19022232, -0.097477674, 0.008231437, -0.062338434, 0.05357719, 0.0699841, 0.04966549, -0.1356955, -0.10891516, -0.08922614, 0.047256224, 0.22591798, -0.0022854153, -0.17004988, 0.21518496, 0.017032757, -0.010807911, 0.07055901, 0.0810105, -0.058497846, 0.009750824, -0.12558487, 0.07440074, 0.07638046, -0.12943353, -0.0361759, 0.14234376, -0.18364751, 0.14107184, -0.019815559, -0.031156115, -0.012572464, 0.012135699, -0.16347735, 0.041966185, 0.1750263, -0.29821193, 0.21196409, 0.21568511, 0.066930845, 0.25161844, 0.10583135, 0.04238472, 0.016374188, -0.04326775, -0.15329131, -0.12333437, 0.1351793, 0.039457034, 0.08672746, 0.12487323]", FloatArray::class.java)

        var sum = 0.0

        for (i in ad.indices) {
            sum += (ad[i] - ab[i]) * (ad[i] - ab[i])
        }

        println(sqrt(sum))
    }
}